name: ci-nullplatform
on:
  push:
    branches:
      - master
      - main
permissions:
  id-token: write
  contents: read
  packages: read
jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Start Nullplatform CI
        id: setup-ci
        uses: nullplatform/github-action-setup-ci@v1
        with:
          api-key: ${{ secrets.NULLPLATFORM_API_KEY }}
    outputs:
      application-id: ${{ steps.setup-ci.outputs.application-id }}
      application-name: ${{ steps.setup-ci.outputs.application-name }}
      build-id: ${{ steps.setup-ci.outputs.build-id }}
  build:
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      matrix:
        platform:
          - asset-arch: linux/amd64
            runner-arch: linux-x64
            asset-name: runner-linux-amd64
          - asset-arch: linux/arm64
            runner-arch: linux-arm64
            asset-name: runner-linux-arm64
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Get build parameters
        id: get-build-parameters
        uses: nullplatform/github-action-secrets-and-variables@v1
        with:
          api-key: ${{ secrets.NULLPLATFORM_API_KEY }}
          application-id: ${{ needs.prepare.outputs.application-id }}
      - name: Build asset for ${{ needs.prepare.outputs.application-name }}
        id: build-asset
        uses: nullplatform/github-action-asset-build@v1
        env:
          VERSION: ${{ vars.VERSION }}
          ARCH: ${{ matrix.platform.runner-arch }}
          PLATFORM: ${{ matrix.platform.asset-arch }}
        with:
          name: ${{ matrix.platform.asset-name }}
      - name: Push asset for ${{ needs.prepare.outputs.application-name }}
        id: push-asset
        uses: nullplatform/github-action-asset-push@v1
        with:
          build-id: ${{ needs.prepare.outputs.build-id }}
          type: docker-image
          name: ${{ matrix.platform.asset-name }}
    outputs:
      build-id: ${{ needs.prepare.outputs.build-id }}
      status: ${{ contains(fromJSON('["failure", "cancelled"]'), job.status) && 'failed' || 'successful' }}
  finalize:
    runs-on: ubuntu-latest
    if: ${{ always() && needs.prepare.outputs.build-id }}
    needs: [prepare, build]
    steps:
      - name: End Nullplatform CI
        id: end-setup-ci
        uses: nullplatform/github-action-setup-ci@v1
        with:
          api-key: ${{ secrets.NULLPLATFORM_API_KEY }}
          build-id: ${{ needs.prepare.outputs.build-id }}
          status: ${{ needs.build.outputs.status || 'failed' }}
